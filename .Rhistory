Cap <- function(string, words = c("all", "first")) {
words <- match.arg(words)
isna <- is.na(string)
string <- tolower(string)
if (identical(words, "all")) {
s <- strsplit(string, " ")
s <- sapply(s, function(i) {
paste(toupper(substring(i, 1,1)), substring(i, 2), sep="", collapse=" ")
})
} else {
s <- paste0(toupper(substr(string, 1, 1)),
substr(string, 2, nchar(string)))
}
s[isna] <- NA_character_
s
}
Cap("what Happends in this case?")
Cap("what Happends in this case?", "first")
Cap("Since Oklahoma is not the first word, it will not be capitalized.", "first")
Cap(c("title case please", "and me too"))
Cap(c("title case please", NA_character_, "and me too"))
is_missing <- function(string) {
is.na(string) | nchar(string) == 0 | grepl("^ +$", string)
}
is_missing(c("ok", "     ", NA_character_, "", "ok too"))
is_missing(c(" ", "  ", ok", "     ", NA_character_, "", "ok too"))
is_missing(c(" ", "  ", "ok", "     ", NA_character_, "", "ok too"))
get_vernac <- function(string) {
string <- sapply(string, function(i) {
eng <- grepl("\\$English\\$", i)
dol_signs <- gregexpr("\\$", i)[[1]]
if (eng) {
end <- regexpr("\\$English\\$", i)[[1]] - 1
strt <- dol_signs[which(dol_signs == regexpr("\\$English\\$", i)[[1]]) - 1] + 1
string <- substr(i, strt, end)
} else {
string <- substr(i, 2, dol_signs[2] - 1)
}
})
tolower(unname(string))
}
get_vernac("$topos$Spanish,$Topo occidental$Spanish,$Eastern Mole$English$")
retrieve_rank <- function(string) {
out <- sapply(string, function(i) {
tmp <- strsplit(i, "$", fixed = TRUE)[[1]]
tmp <- tmp[length(tmp)]
sub(":.*$", "", tmp)
})
unname(out)
}
retrieve_rank(
c("174773:$Kingdom:Animalia$Subkingdom:Bilateria$Infrakingdom:Deuterostomia$Phylum:Chordata$Subphylum:Vertebrata$Infraphylum:Gnathostomata$Superclass:Tetrapoda$Class:Aves$Order:Pelecaniformes$Family:Ardeidae$Subfamily:Ardeinae$Genus:Ardea$Species:Ardea herodias$",
"21842:$Kingdom:Plantae$Subkingdom:Viridiplantae$Infrakingdom:Streptophyta$Superdivision:Embryophyta$Division:Tracheophyta$Subdivision:Spermatophytina$Class:Magnoliopsida$Superorder:Rosanae$Order:Malvales$Family:Malvaceae$Genus:Malvaviscus$")
)
retrieve_rank(
c("174773:$Kingdom:Animalia$Subkingdom:Bilateria$Infrakingdom:Deuterostomia$Phylum:Chordata$Subphylum:Vertebrata$Infraphylum:Gnathostomata$Superclass:Tetrapoda$Class:Aves$Order:Pelecaniformes$Family:Ardeidae$Subfamily:Ardeinae$Genus:Ardea$Species:Ardea herodias$",
"21842:$Kingdom:Plantae$Subkingdom:Viridiplantae$Infrakingdom:Streptophyta$Superdivision:Embryophyta$Division:Tracheophyta$Subdivision:Spermatophytina$Class:Magnoliopsida$Superorder:Rosanae$Order:Malvales$Family:Malvaceae$Genus:Malvaviscus$"))
scientific_names = c("Thryothorus ludovicianus", "Melanerpes carolinus", "Cardinalis cardinalis",
"Mimus polyglottos", "Setophaga americana", "Bidens alba", "Pandion haliaetus",
"Pachydiplax longipennis", "Ardea herodias", "Cladonia evansii",
"Ischnura hastata", "Smilax bona-nox", "Phyla", "Plantae", "Malvaviscus",
"Anaxyrus")
scientific_names <- unique(scientific_names)
if (length(scientific_names) > 100) {
group_sn <- cut(seq_along(scientific_names), ceiling(length(scientific_names)/100), labels = FALSE)
} else group_sn <- rep(1, length(scientific_names))
unique(group_sn)
i = 1
tmp_sn <- scientific_names[which(group_sn == i)]
sci_query <- paste0('nameWOInd:(', paste(shQuote(tmp_sn), collapse = " "), ')')
invisible(solrium::solr_connect("http://services.itis.gov/", verbose = FALSE))
itis <- solrium::solr_search(q = sci_query,
fl = c('tsn', 'nameWOInd', 'usage', 'rank', 'acceptedTSN',
'vernacular', 'hierarchySoFarWRanks'),
rows = length(tmp_sn) + 20) %>% # allow room for multiple returned matches
group_by(nameWOInd) %>%
# If multiple matches, preferentially keep valid/accepted, if available, or first record
slice(max(which(usage %in% c("accepted", "valid")), 1)) %>%
ungroup()
library(dplyr)
itis <- lapply(unique(group_sn), function(i) {
tmp_sn <- scientific_names[which(group_sn == i)]
sci_query <- paste0('nameWOInd:(', paste(shQuote(tmp_sn), collapse = " "), ')')
invisible(solrium::solr_connect("http://services.itis.gov/", verbose = FALSE))
itis <- solrium::solr_search(q = sci_query,
fl = c('tsn', 'nameWOInd', 'usage', 'rank', 'acceptedTSN',
'vernacular', 'hierarchySoFarWRanks'),
rows = length(tmp_sn) + 20) %>% # allow room for multiple returned matches
group_by(nameWOInd) %>%
# If multiple matches, preferentially keep valid/accepted, if available, or first record
slice(max(which(usage %in% c("accepted", "valid")), 1)) %>%
ungroup()
})
itis <- bind_rows(itis)
unmatched <- scientific_names[which(!(scientific_names %in% itis$nameWOInd))]
if (!("vernacular" %in% colnames(itis))) itis$vernacular <- NA_character_
retrieve_sci_name <- function(string) {
ifelse(grepl("\\$Species:", string),
sub(".*Species: *(.*?) *\\$.*$", "\\1", string),
NA_character_)
}
retrieve_sci_name(
c("174773:$Kingdom:Animalia$Subkingdom:Bilateria$Infrakingdom:Deuterostomia$Phylum:Chordata$Subphylum:Vertebrata$Infraphylum:Gnathostomata$Superclass:Tetrapoda$Class:Aves$Order:Pelecaniformes$Family:Ardeidae$Subfamily:Ardeinae$Genus:Ardea$Species:Ardea herodias$",
"21842:$Kingdom:Plantae$Subkingdom:Viridiplantae$Infrakingdom:Streptophyta$Superdivision:Embryophyta$Division:Tracheophyta$Subdivision:Spermatophytina$Class:Magnoliopsida$Superorder:Rosanae$Order:Malvales$Family:Malvaceae$Genus:Malvaviscus$"))
source('~/FWS_Projects/R_packages/itistools/R/utils.R')
head(itis)
nrow(itis)
table(itis$rank)
source('~/FWS_Projects/R_packages/itistools/R/utils.R')
source('~/FWS_Projects/R_packages/itistools/R/get_itis.R')
library(dplyr)
source('~/FWS_Projects/R_packages/itistools/R/get_itis.R')
source('~/FWS_Projects/R_packages/itistools/R/utils.R')
scientific_names = c("Thryothorus ludovicianus", "Melanerpes carolinus", "Cardinalis cardinalis",
scientific_names = c("Thryothorus ludovicianus", "Melanerpes carolinus", "Cardinalis cardinalis",
"Mimus polyglottos", "Setophaga americana", "Bidens alba", "Pandion haliaetus",
"Pachydiplax longipennis", "Ardea herodias", "Cladonia evansii",
"Ischnura hastata", "Smilax bona-nox", "Phyla", "Plantae", "Malvaviscus",
"Anaxyrus")
scientific_names
get_itis(scientific_names = scientific_names)
sn <- scientific_names = c("Thryothorus ludovicianus", "Cardinalis cardinalis",
"Bidens alba", "Pachydiplax longipennis", "Cladonia evansii",
"Ischnura hastata", "Smilax bona-nox", "Plantae", "Malvaviscus",
"Anaxyrus", "Gulo gulo")
sn <- c("Thryothorus ludovicianus", "Cardinalis cardinalis",
"Bidens alba", "Pachydiplax longipennis", "Cladonia evansii",
"Ischnura hastata", "Smilax bona-nox", "Plantae", "Malvaviscus",
"Anaxyrus", "Gulo gulo")
sn <- c("Thryothorus ludovicianus", "Cardinalis cardinalis", "Bidens alba",
"Pachydiplax longipennis", "Cladonia evansii", "Ischnura hastata",
"Smilax bona-nox", "Plantae", "Malvaviscus", "Anaxyrus", "Gulo gulo")
out <- get_itis(sn)
out
source('~/FWS_Projects/R_packages/itistools/R/get_itis.R')
library(itistools)
source('~/FWS_Projects/R_packages/itistools/R/utils.R')
source('~/FWS_Projects/R_packages/itistools/R/utils.R')
library(itistools)
library(itistools)
library(itistools)
